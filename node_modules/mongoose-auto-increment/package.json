{
  "_from": "mongoose-auto-increment",
  "_id": "mongoose-auto-increment@5.0.1",
  "_inBundle": false,
  "_integrity": "sha1-gn4FHZzDcdq+i/8acEQx00HLed8=",
  "_location": "/mongoose-auto-increment",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "mongoose-auto-increment",
    "fetchSpec": "latest",
    "name": "mongoose-auto-increment",
    "raw": "mongoose-auto-increment",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mongoose-auto-increment/-/mongoose-auto-increment-5.0.1.tgz",
  "_shasum": "827e051d9cc371dabe8bff1a704431d341cb79df",
  "_spec": "mongoose-auto-increment",
  "_where": "/home/srikaewa/NodeJSProjects/EucalyptusDiseaseDiagnosisServer",
  "author": {
    "email": "alex.ford@codetunnel.com",
    "name": "Alex Ford",
    "url": "Chevex"
  },
  "bugs": {
    "url": "https://github.com/codetunnel/mongoose-auto-increment/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Nassor Paulino da Silva",
      "email": "nassor@gmail.com",
      "url": "rossan"
    },
    {
      "name": "Misha Koryak",
      "email": "mkoryak@gmail.com",
      "url": "mkoryak"
    },
    {
      "name": "Christopher Hiller",
      "url": "boneskull"
    },
    {
      "name": "tomaskavka",
      "url": "https://github.com/tomaskavka"
    }
  ],
  "dependencies": {
    "extend": "^3.0.0"
  },
  "deprecated": false,
  "description": "This plugin allows you to auto-increment any field on any mongoose schema that you wish.",
  "devDependencies": {
    "async": "*",
    "chai": "*",
    "mocha": "*",
    "mongoose": "^4.1.12"
  },
  "homepage": "https://github.com/codetunnel/mongoose-auto-increment#readme",
  "keywords": [
    "auto",
    "auto-inc",
    "auto-increment",
    "auto_inc",
    "auto_increment",
    "autoinc",
    "autoincrement",
    "automatic",
    "increment",
    "mongoose",
    "mongoose-pureautoinc",
    "plugin",
    "pureautoinc"
  ],
  "name": "mongoose-auto-increment",
  "optionalDependencies": {},
  "peerDependencies": {
    "mongoose": "^4.1.12"
  },
  "readme": "# mongoose-auto-increment\n\n[![Build Status](https://travis-ci.org/codetunnel/mongoose-auto-increment.png?branch=master)](https://travis-ci.org/codetunnel/mongoose-auto-increment)\n[![Dependencies Status](https://gemnasium.com/codetunnel/mongoose-auto-increment.png)](https://gemnasium.com/codetunnel/mongoose-auto-increment)\n[![NPM version](https://badge.fury.io/js/mongoose-auto-increment.png)](http://badge.fury.io/js/mongoose-auto-increment)\n\n> Mongoose plugin that auto-increments any ID field on your schema every time a document is saved.\n\n---\n\n> This is the module used by [mongoose-simpledb](https://github.com/codetunnel/mongoose-simpledb) to increment Number IDs. You are perfectly able to use this module by itself if you would like. However, if you're looking to make your life easier when using [mongoose](http://mongoosejs.com/) then I highly recommend you check out simpledb. It's a small wrapper around mongoose but it makes it extremely easy to deal with your models and draws a clear path for how to use mongoose in your application.\n\n## Getting Started\n\n> npm install mongoose-auto-increment\n\nOnce you have the plugin installed it is very simple to use. Just get reference to it, initialize it by passing in your\nmongoose connection and pass `autoIncrement.plugin` to the `plugin()` function on your schema.\n\n> Note: You only need to initialize MAI once.\n\n````js\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema,\n    autoIncrement = require('mongoose-auto-increment');\n\nvar connection = mongoose.createConnection(\"mongodb://localhost/myDatabase\");\n\nautoIncrement.initialize(connection);\n\nvar bookSchema = new Schema({\n    author: { type: Schema.Types.ObjectId, ref: 'Author' },\n    title: String,\n    genre: String,\n    publishDate: Date\n});\n\nbookSchema.plugin(autoIncrement.plugin, 'Book');\nvar Book = connection.model('Book', bookSchema);\n````\n\nThat's it. Now you can create book entities at will and they will have an `_id` field added of type `Number` and will automatically increment with each new document. Even declaring references is easy, just remember to change the reference property's type to `Number` instead of `ObjectId` if the referenced model is also using the plugin.\n\n````js\nvar authorSchema = new mongoose.Schema({\n    name: String\n});\n    \nvar bookSchema = new Schema({\n    author: { type: Number, ref: 'Author' },\n    title: String,\n    genre: String,\n    publishDate: Date\n});\n    \nbookSchema.plugin(autoIncrement.plugin, 'Book');\nauthorSchema.plugin(autoIncrement.plugin, 'Author');\n````\n\n### Want a field other than `_id`?\n\n````js\nbookSchema.plugin(autoIncrement.plugin, { model: 'Book', field: 'bookId' });\n````\n\n### Want that field to start at a different number than zero or increment by more than one?\n\n````js\nbookSchema.plugin(autoIncrement.plugin, {\n    model: 'Book',\n    field: 'bookId',\n    startAt: 100,\n    incrementBy: 100\n});\n````\n\nYour first book document would have a `bookId` equal to `100`. Your second book document would have a `bookId` equal to `200`, and so on.\n\n### Want to know the next number coming up?\n\n````js\nvar Book = connection.model('Book', bookSchema);\nBook.nextCount(function(err, count) {\n\n    // count === 0 -> true\n\n    var book = new Book();\n    book.save(function(err) {\n\n        // book._id === 0 -> true\n\n        book.nextCount(function(err, count) {\n\n            // count === 1 -> true\n\n        });\n    });\n});\n````\n\nnextCount is both a static method on the model (`Book.nextCount(...)`) and an instance method on the document (`book.nextCount(...)`).\n\n### Want to reset counter back to the start value?\n\n````js\nbookSchema.plugin(autoIncrement.plugin, {\n    model: 'Book',\n    field: 'bookId',\n    startAt: 100\n});\n\nvar Book = connection.model('Book', bookSchema),\n    book = new Book();\n\nbook.save(function (err) {\n\n    // book._id === 100 -> true\n\n    book.nextCount(function(err, count) {\n\n        // count === 101 -> true\n\n        book.resetCount(function(err, nextCount) {\n\n            // nextCount === 100 -> true\n\n        });\n\n    });\n\n});\n````\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/codetunnel/mongoose-auto-increment.git"
  },
  "scripts": {
    "test": "node_modules/mocha/bin/mocha"
  },
  "version": "5.0.1"
}
